//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleMvcWcfClient.myServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TravelInfo", Namespace="http://schemas.datacontract.org/2004/07/SampleWcfLib")]
    [System.SerializableAttribute()]
    public partial class TravelInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfTravelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoOfDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TravelIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfTravel {
            get {
                return this.DateOfTravelField;
            }
            set {
                if ((this.DateOfTravelField.Equals(value) != true)) {
                    this.DateOfTravelField = value;
                    this.RaisePropertyChanged("DateOfTravel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfDays {
            get {
                return this.NoOfDaysField;
            }
            set {
                if ((this.NoOfDaysField.Equals(value) != true)) {
                    this.NoOfDaysField = value;
                    this.RaisePropertyChanged("NoOfDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TravelId {
            get {
                return this.TravelIdField;
            }
            set {
                if ((this.TravelIdField.Equals(value) != true)) {
                    this.TravelIdField = value;
                    this.RaisePropertyChanged("TravelId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="myServices.ITravelogue")]
    public interface ITravelogue {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelogue/AddNewTravelPost", ReplyAction="http://tempuri.org/ITravelogue/AddNewTravelPostResponse")]
        void AddNewTravelPost(SampleMvcWcfClient.myServices.TravelInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelogue/AddNewTravelPost", ReplyAction="http://tempuri.org/ITravelogue/AddNewTravelPostResponse")]
        System.Threading.Tasks.Task AddNewTravelPostAsync(SampleMvcWcfClient.myServices.TravelInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelogue/GetAllPosts", ReplyAction="http://tempuri.org/ITravelogue/GetAllPostsResponse")]
        SampleMvcWcfClient.myServices.TravelInfo[] GetAllPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelogue/GetAllPosts", ReplyAction="http://tempuri.org/ITravelogue/GetAllPostsResponse")]
        System.Threading.Tasks.Task<SampleMvcWcfClient.myServices.TravelInfo[]> GetAllPostsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITravelogueChannel : SampleMvcWcfClient.myServices.ITravelogue, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TravelogueClient : System.ServiceModel.ClientBase<SampleMvcWcfClient.myServices.ITravelogue>, SampleMvcWcfClient.myServices.ITravelogue {
        
        public TravelogueClient() {
        }
        
        public TravelogueClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TravelogueClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TravelogueClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TravelogueClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddNewTravelPost(SampleMvcWcfClient.myServices.TravelInfo info) {
            base.Channel.AddNewTravelPost(info);
        }
        
        public System.Threading.Tasks.Task AddNewTravelPostAsync(SampleMvcWcfClient.myServices.TravelInfo info) {
            return base.Channel.AddNewTravelPostAsync(info);
        }
        
        public SampleMvcWcfClient.myServices.TravelInfo[] GetAllPosts() {
            return base.Channel.GetAllPosts();
        }
        
        public System.Threading.Tasks.Task<SampleMvcWcfClient.myServices.TravelInfo[]> GetAllPostsAsync() {
            return base.Channel.GetAllPostsAsync();
        }
    }
}
